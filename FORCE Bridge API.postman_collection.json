{
	"info": {
		"_postman_id": "cb49ffe6-b126-4021-81a2-0f7e3d37f46f",
		"name": "FORCE Bridge API",
		"description": "This is the online documentation of FORCE Bridge API. It lists all resources and the related access methods provided by FORCE Bridge API, including call parameters, request and response messages.\n\nContact Support:\n Name: FORCE Bridge Hub\n Email: community@forcebridge.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "machines",
			"item": [
				{
					"name": "Request machines",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/machines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"machines"
							],
							"query": [
								{
									"key": "limit",
									"value": "100",
									"description": "The limit used for pagination",
									"disabled": true
								},
								{
									"key": "machineNumber",
									"value": "<string>",
									"description": "machineNumber",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The offset used for pagination",
									"disabled": true
								},
								{
									"key": "workplaceNumber",
									"value": "<string>",
									"description": "workplaceNumber",
									"disabled": true
								}
							]
						},
						"description": "Request a collection of cached machines."
					},
					"response": []
				},
				{
					"name": "Request machine details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/machines/:machineId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"machines",
								":machineId"
							],
							"variable": [
								{
									"key": "machineId",
									"value": "<string>",
									"description": "(Required) UUID of the machine"
								}
							]
						},
						"description": "Request details for a certain machine."
					},
					"response": []
				}
			]
		},
		{
			"name": "operations",
			"item": [
				{
					"name": "{operation Id}",
					"item": [
						{
							"name": "Retrieve an operation.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/operations/:operationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"operations",
										":operationId"
									],
									"variable": [
										{
											"key": "operationId",
											"value": "<string>",
											"description": "(Required) UUID of an operation"
										}
									]
								},
								"description": "Information is returned for domain-specific identification of the operation and about its current phase. \n\nIn addition, the workplace on which the operation is currently being executed is also specified for an operation in progress. \nFurthermore, most sub-resources of the operation can be embedded."
							},
							"response": []
						},
						{
							"name": "Retrieve the alternative workplaces.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/operations/:operationId/alternativeWorkplaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"operations",
										":operationId",
										"alternativeWorkplaces"
									],
									"variable": [
										{
											"key": "operationId",
											"value": "<string>",
											"description": "(Required) UUID of an operation"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the components needed to perform the operation.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/operations/:operationId/components?limit=100&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"operations",
										":operationId",
										"components"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Size of the requested page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset used for pagination"
										}
									],
									"variable": [
										{
											"key": "operationId",
											"value": "<string>",
											"description": "(Required) UUID of an operation"
										}
									]
								},
								"description": "A list of components is returned. These components are specified in the routing of the ERP system and are needed to perform the operation."
							},
							"response": []
						}
					]
				},
				{
					"name": "Retrieve the collection of operations.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/operations?limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"operations"
							],
							"query": [
								{
									"key": "endDate",
									"value": null,
									"description": "Operations with a later start date are excluded. The start timestamp of an operation is either the actual start date (COMPLETED, CLOSED, PROCESSING, SETUP) or the planned start date (DISPATCHED) or the scheduled start date (RELEASED), depending on the operation phase.",
									"disabled": true
								},
								{
									"key": "isDispatched",
									"value": null,
									"description": "If set to true, filter the operations by those currently in operation phase 'DISPATCHED'",
									"disabled": true
								},
								{
									"key": "isInProgress",
									"value": null,
									"description": "If set to true, filter the operations by those currently in progress",
									"disabled": true
								},
								{
									"key": "isPlannable",
									"value": null,
									"description": "If set to true, only plannable operations are returned",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Size of the requested page"
								},
								{
									"key": "materialNumber",
									"value": null,
									"description": "Material number of the material produced by the operation",
									"disabled": true
								},
								{
									"key": "operationNumber",
									"value": null,
									"description": "Operation number within the ERP system",
									"disabled": true
								},
								{
									"key": "operationPhaseId",
									"value": null,
									"description": "ID of an operation phase",
									"disabled": true
								},
								{
									"key": "operationSplit",
									"value": null,
									"description": "Split number of the operation",
									"disabled": true
								},
								{
									"key": "paginationDirection",
									"value": null,
									"description": "Direction on how to navigate through the response pages",
									"disabled": true
								},
								{
									"key": "paginationIdentifier",
									"value": null,
									"description": "A response is split into pages (pagination) if the number of requested elements exceeds the defined limit.\nIn cases where the timestamp is not unique but used more than once, a unique identifier is associated to each page of a paginated response.\nThese can then be used to retrieve a specific page",
									"disabled": true
								},
								{
									"key": "paginationTimestamp",
									"value": null,
									"description": "Timestamp used for pagination",
									"disabled": true
								},
								{
									"key": "productionOrderId",
									"value": null,
									"description": "UUID of the corresponding production order",
									"disabled": true
								},
								{
									"key": "productionOrderNumber",
									"value": null,
									"description": "Production Order number of the corresponding production order",
									"disabled": true
								},
								{
									"key": "productionOrderSplit",
									"value": null,
									"description": "Split number of the corresponding production order split",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": null,
									"description": "Operations with an earlier end date are excluded. The end timestamp of an operation is either the actual end date (COMPLETED, CLOSED) or the planned end date (DISPATCHED) or the scheduled end date (RELEASED), depending on the operation phase. For running operations (PROCESSING, SETUP), the assumed end date is the end of time",
									"disabled": true
								},
								{
									"key": "workplaceId",
									"value": null,
									"description": "UUID of the workplace at which the operation is or has been executed for operations in the SETUP, PROCESSING, COMPLETED and CLOSED phases. For operations in the DISPATCHED phase, it is the number of the planned workplace. For operations in the RELEASED phase, it is the number of the target workplace",
									"disabled": true
								},
								{
									"key": "workplaceNumber",
									"value": null,
									"description": "Workplace number at which the operation is or has been executed for operations in the SETUP, PROCESSING, COMPLETED and CLOSED phases. For operations in the DISPATCHED phase, it is the number of the planned workplace. For operations in the RELEASED phase, it is the number of the target workplace.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "reports",
			"item": [
				{
					"name": "Request hitlist of operating states (material)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/hitListOperatingStatesMaterial?endDate=<dateTime>&limit=100&materialId=<string>&materialNumber=<string>&offset=0&startDate=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"hitListOperatingStatesMaterial"
							],
							"query": [
								{
									"key": "endDate",
									"value": "<dateTime>",
									"description": "End date"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Size of the requested page"
								},
								{
									"key": "materialId",
									"value": "<string>",
									"description": "UUID of a material"
								},
								{
									"key": "materialNumber",
									"value": "<string>",
									"description": "Number of a material"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset used for pagination"
								},
								{
									"key": "startDate",
									"value": "<dateTime>",
									"description": "(Required) Start date"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request hitlist of operating states (workplace)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/hitListOperatingStatesWorkplace?endDate=<dateTime>&limit=100&offset=0&startDate=<dateTime>&workplaceGroupId=<string>&workplaceGroupNumber=<string>&workplaceId=<string>&workplaceNumber=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"hitListOperatingStatesWorkplace"
							],
							"query": [
								{
									"key": "endDate",
									"value": "<dateTime>",
									"description": "End date"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Size of the requested page"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset used for pagination"
								},
								{
									"key": "startDate",
									"value": "<dateTime>",
									"description": "(Required) Start date"
								},
								{
									"key": "workplaceGroupId",
									"value": "<string>",
									"description": "UUID of a workplace group"
								},
								{
									"key": "workplaceGroupNumber",
									"value": "<string>",
									"description": "Number of a workplace group"
								},
								{
									"key": "workplaceId",
									"value": "<string>",
									"description": "UUID of a workplace"
								},
								{
									"key": "workplaceNumber",
									"value": "<string>",
									"description": "Number of a workplace"
								}
							]
						},
						"description": "At least one of the following request parameters has to be provided: `workplaceId`, `workplaceNumber`, `workplaceGroupId`, `workplaceGroupNumber`"
					},
					"response": []
				},
				{
					"name": "Request overall process efficiency metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/overallProcessEfficiency?endDate=<dateTime>&materialId=<string>&materialNumber=<string>&orderId=<string>&startDate=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"overallProcessEfficiency"
							],
							"query": [
								{
									"key": "endDate",
									"value": "<dateTime>",
									"description": "End date"
								},
								{
									"key": "materialId",
									"value": "<string>",
									"description": "UUID of a material"
								},
								{
									"key": "materialNumber",
									"value": "<string>",
									"description": "Number of a material"
								},
								{
									"key": "orderId",
									"value": "<string>",
									"description": "UUID of a production order"
								},
								{
									"key": "startDate",
									"value": "<dateTime>",
									"description": "(Required) Start date"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request quality details (material)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/qualityDetailsMaterial?endDate=<dateTime>&limit=100&materialId=<string>&materialNumber=<string>&offset=0&startDate=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"qualityDetailsMaterial"
							],
							"query": [
								{
									"key": "endDate",
									"value": "<dateTime>",
									"description": "End date"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Size of the requested page"
								},
								{
									"key": "materialId",
									"value": "<string>",
									"description": "UUID of a material"
								},
								{
									"key": "materialNumber",
									"value": "<string>",
									"description": "Number of a material"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset used for pagination"
								},
								{
									"key": "startDate",
									"value": "<dateTime>",
									"description": "(Required) Start date"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request quality details (workplace)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/qualityDetailsWorkplace?endDate=<dateTime>&limit=100&materialId=<string>&materialNumber=<string>&offset=0&startDate=<dateTime>&workplaceGroupId=<string>&workplaceGroupNumber=<string>&workplaceId=<string>&workplaceNumber=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"qualityDetailsWorkplace"
							],
							"query": [
								{
									"key": "endDate",
									"value": "<dateTime>",
									"description": "End date"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Size of the requested page"
								},
								{
									"key": "materialId",
									"value": "<string>",
									"description": "UUID of a material"
								},
								{
									"key": "materialNumber",
									"value": "<string>",
									"description": "Number of a material"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset used for pagination"
								},
								{
									"key": "startDate",
									"value": "<dateTime>",
									"description": "(Required) Start date"
								},
								{
									"key": "workplaceGroupId",
									"value": "<string>",
									"description": "UUID of a workplace group"
								},
								{
									"key": "workplaceGroupNumber",
									"value": "<string>",
									"description": "Number of a workplace group"
								},
								{
									"key": "workplaceId",
									"value": "<string>",
									"description": "UUID of a workplace"
								},
								{
									"key": "workplaceNumber",
									"value": "<string>",
									"description": "Number of a workplace"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request total quantity per workplace and material",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reports/totalQuantity?endDate=<dateTime>&limit=100&offset=0&startDate=<dateTime>&workplaceGroupId=<string>&workplaceGroupNumber=<string>&workplaceId=<string>&workplaceNumber=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"totalQuantity"
							],
							"query": [
								{
									"key": "endDate",
									"value": "<dateTime>",
									"description": "End date"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Size of the requested page"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset used for pagination"
								},
								{
									"key": "startDate",
									"value": "<dateTime>",
									"description": "(Required) Start date"
								},
								{
									"key": "workplaceGroupId",
									"value": "<string>",
									"description": "UUID of a workplace group"
								},
								{
									"key": "workplaceGroupNumber",
									"value": "<string>",
									"description": "Number of a workplace group"
								},
								{
									"key": "workplaceId",
									"value": "<string>",
									"description": "UUID of a workplace"
								},
								{
									"key": "workplaceNumber",
									"value": "<string>",
									"description": "Number of a workplace"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tickets",
			"item": [
				{
					"name": "{ticket Id}",
					"item": [
						{
							"name": "Retrieve at ticket.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "<string>",
											"description": "(Required) UUID of a ticket"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update the ticket.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"priority\": \"<string>\",\n    \"ticketStateId\": \"<string>\",\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"rootCause\": \"<string>\",\n    \"ticketClassId\": \"<string>\",\n    \"operationId\": \"<string>\",\n    \"materialNumber\": \"<string>\",\n    \"workplaceId\": \"<string>\",\n    \"shiftId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "<string>",
											"description": "(Required) UUID of a ticket"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a ticket.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "<string>",
											"description": "(Required) UUID of a ticket"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update the ticket state.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId/:ticketStateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId",
										":ticketStateId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "<string>",
											"description": "(Required) UUID of a ticket"
										},
										{
											"key": "ticketStateId",
											"value": "<string>",
											"description": "(Required) ID of a ticket state"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Retrieve tickets matching the filter criteria.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tickets?creationDateFrom=<dateTime>&creationDateTo=<dateTime>&editor=<string>&limit=100&materialNumber=<string>&operationId=<string>&paginationDirection=NEXT&paginationIdentifier=<string>&paginationTimestamp=<dateTime>&ticketClassId=<string>&ticketNumber=<string>&ticketPriority=<string>&ticketStateId=<string>&ticketTitle=<string>&workplaceId=<string>&workplaceNumber=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets"
							],
							"query": [
								{
									"key": "creationDateFrom",
									"value": "<dateTime>",
									"description": "Ticket creation date from as JSON property , to be searched or updated"
								},
								{
									"key": "creationDateTo",
									"value": "<dateTime>",
									"description": "Ticket creation date to as JSON property , to be searched or updated"
								},
								{
									"key": "editor",
									"value": "<string>",
									"description": "Ticket editor as JSON property , to be searched or updated"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Size of the requested page"
								},
								{
									"key": "materialNumber",
									"value": "<string>",
									"description": "Ticket material name as JSON property , to be searched or updated"
								},
								{
									"key": "operationId",
									"value": "<string>",
									"description": "Ticket operation Id as JSON property , to be searched or updated"
								},
								{
									"key": "paginationDirection",
									"value": "NEXT",
									"description": "Direction on how to navigate through the response pages"
								},
								{
									"key": "paginationIdentifier",
									"value": "<string>",
									"description": "A response is split into pages (pagination) if the number of requested elements exceeds the defined limit.\nIn cases where the timestamp is not unique but used more than once, a unique identifier is associated to each page of a paginated response.\nThese can then be used to retrieve a specific page."
								},
								{
									"key": "paginationTimestamp",
									"value": "<dateTime>",
									"description": "Timestamp used for pagination"
								},
								{
									"key": "ticketClassId",
									"value": "<string>",
									"description": "Ticket class as JSON property , to be searched or updated"
								},
								{
									"key": "ticketNumber",
									"value": "<string>",
									"description": "Ticket name as JSON property , to be searched or updated"
								},
								{
									"key": "ticketPriority",
									"value": "<string>",
									"description": "Ticket priority as JSON property , to be searched or updated"
								},
								{
									"key": "ticketStateId",
									"value": "<string>",
									"description": "Ticket state Id as JSON property , to be searched or updated"
								},
								{
									"key": "ticketTitle",
									"value": "<string>",
									"description": "Ticket title as JSON property , to be searched or updated"
								},
								{
									"key": "workplaceId",
									"value": "<string>",
									"description": "Workplace Id as JSON property, to be searched or updated"
								},
								{
									"key": "workplaceNumber",
									"value": "<string>",
									"description": "Workplace name as JSON property, to be searched or updated"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new ticket.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"priority\": \"<string>\",\n    \"ticketStateId\": \"<string>\",\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"rootCause\": \"<string>\",\n    \"ticketClassId\": \"<string>\",\n    \"operationId\": \"<string>\",\n    \"materialNumber\": \"<string>\",\n    \"workplaceId\": \"<string>\",\n    \"shiftId\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "workplaces",
			"item": [
				{
					"name": "shifts",
					"item": [
						{
							"name": "Retrieve the collection of workplace shifts.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workplaces/shifts?associatedDay=<date>&endDate=<dateTime>&erpContextId=<string>&isWorkingShift=<boolean>&limit=100&paginationDirection=NEXT&paginationIdentifier=<string>&paginationTimestamp=<dateTime>&shiftTypeId=<string>&startDate=<dateTime>&workplaceGroupNumber=<string>&workplaceId=<string>&workplaceNumber=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workplaces",
										"shifts"
									],
									"query": [
										{
											"key": "associatedDay",
											"value": "<date>",
											"description": "Associated day of the workplace shift"
										},
										{
											"key": "endDate",
											"value": "<dateTime>",
											"description": "The end date of the considered period\nDefault: End of the next week"
										},
										{
											"key": "erpContextId",
											"value": "<string>",
											"description": "Universally unique identifier of the ERP context in which the workplace number is a unique identifier for a workplace or a workplace group. In SAP ERP, for example, this context is defined by the client, the company code, and the plant"
										},
										{
											"key": "isWorkingShift",
											"value": "<boolean>",
											"description": "Boolean to indicate if a shift is a working shift"
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Size of the requested page"
										},
										{
											"key": "paginationDirection",
											"value": "NEXT",
											"description": "Direction on how to navigate through the response pages"
										},
										{
											"key": "paginationIdentifier",
											"value": "<string>",
											"description": "A response is split into pages (pagination) if the number of requested elements exceeds the defined limit.\nIn cases where the timestamp is not unique but used more than once, a unique identifier is associated to each page of a paginated response.\nThese can then be used to retrieve a specific page."
										},
										{
											"key": "paginationTimestamp",
											"value": "<dateTime>",
											"description": "Timestamp used for pagination"
										},
										{
											"key": "shiftTypeId",
											"value": "<string>",
											"description": "ID of a shift type"
										},
										{
											"key": "startDate",
											"value": "<dateTime>",
											"description": "The start date of the considered period\nDefault: Beginning of the current week"
										},
										{
											"key": "workplaceGroupNumber",
											"value": "<string>",
											"description": "Number of workplace group"
										},
										{
											"key": "workplaceId",
											"value": "<string>",
											"description": "UUID of a workplace"
										},
										{
											"key": "workplaceNumber",
											"value": "<string>",
											"description": "Number of the workplace"
										}
									]
								},
								"description": "A filtered collection of workplace shifts is returned. Call parameters allow filtering, for example, according to a specific workplace and according to shifts within a certain period of time."
							},
							"response": []
						},
						{
							"name": "Retrieve a workplace shift.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workplaces/shifts/:shiftId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workplaces",
										"shifts",
										":shiftId"
									],
									"variable": [
										{
											"key": "shiftId",
											"value": "<string>",
											"description": "(Required) UUID of a shift"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "{workplace Id}",
					"item": [
						{
							"name": "Retrieve a workplace.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workplaces/:workplaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workplaces",
										":workplaceId"
									],
									"variable": [
										{
											"key": "workplaceId",
											"value": "<string>",
											"description": "(Required) UUID of a workplace"
										}
									]
								},
								"description": "Information is returned for domain-specific identification of the workplace and about its current state. Information on the operations that are currently being executed at the workplace can be embedded (embed=currentOperations). In addition, most sub-resources of the workplace can be embedded."
							},
							"response": []
						},
						{
							"name": "Retrieve the devices that belong to a workplace.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workplaces/:workplaceId/devices?limit=100&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workplaces",
										":workplaceId",
										"devices"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Size of the requested page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset used for pagination"
										}
									],
									"variable": [
										{
											"key": "workplaceId",
											"value": "<string>",
											"description": "(Required) UUID of a workplace"
										}
									]
								},
								"description": "These can be embedded systems or individual programmable logic controllers of a machine or several controllers, which are combined to a virtual device. The devices record time series of process parameters and other sensory measured values. The recorded time series are used, among other things, for predictive maintenance. If applicable, sensory measurement time series may also be evaluated in the context of a predictive quality assurance system."
							},
							"response": []
						},
						{
							"name": "Retrieve the operating state summary of a workplace.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workplaces/:workplaceId/operatingStateSummary?endDate=<dateTime>&limit=100&offset=0&operatingStateClassId=<string>&shiftId=<string>&startDate=<dateTime>&timeBase=<string>&workplaceStateId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workplaces",
										":workplaceId",
										"operatingStateSummary"
									],
									"query": [
										{
											"key": "endDate",
											"value": "<dateTime>",
											"description": "The end date of the considered period\nDefault: Current timestamp"
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Size of the requested page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset used for pagination"
										},
										{
											"key": "operatingStateClassId",
											"value": "<string>",
											"description": "UUID of an operating state class"
										},
										{
											"key": "shiftId",
											"value": "<string>",
											"description": "UUID of a shift of the corresponding workplace"
										},
										{
											"key": "startDate",
											"value": "<dateTime>",
											"description": "The start date of the considered period\nDefault: Beginning of the current week"
										},
										{
											"key": "timeBase",
											"value": "<string>",
											"description": "Time base to be filtered for"
										},
										{
											"key": "workplaceStateId",
											"value": "<string>",
											"description": "ID of a workplace state"
										}
									],
									"variable": [
										{
											"key": "workplaceId",
											"value": "<string>",
											"description": "(Required) UUID of a workplace"
										}
									]
								},
								"description": "The total duration and frequency of the operating states that have occurred are returned. Furthermore scheduled operating time, occupancy time, processing time, production time and setup time are summed up and the key performance indicators occupancy rate, setup reduction, process availability and availability are calculated. The production time is the sum of the durations of all operating states assigned to the PRODUCTION time base. The setup time is the sum of the durations of all operating states assigned to the SETUP time base. The scheduled operating time is the sum of the durations of all operating states assigned to the SCHEDULED OPERATING TIME time base.   Note: The setup time is not necessarily identical to the duration of the setup phase, because operating states that are assigned to the time base SETUP can also occur during the processing phase (e. g. intermediate setup). If such operating states occur during the processing phase, the setup time is longer than the duration of the setup phase and the processing time is shorter than the duration of the processing phase. The scheduled operating time is also not necessarily identical to the duration of the originally scheduled operating time, since operating states that are not assigned to the SCHEDULED OPERATING TIME time base can also occur within the originally scheduled operating time (e.g. spontaneous works council meeting). Such operating states do not reduce the availability of a workplace. For further information, please refer to the documentation at https://docs.forcebridge.io/index.html. A definition of the key figures can be found at https://docs.forcebridge.io/appendix/ ."
							},
							"response": []
						},
						{
							"name": "Retrieve the quantity summary of a workplace.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workplaces/:workplaceId/quantitySummary?endDate=<dateTime>&limit=100&materialNumber=<string>&offset=0&shiftId=<string>&startDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workplaces",
										":workplaceId",
										"quantitySummary"
									],
									"query": [
										{
											"key": "endDate",
											"value": "<dateTime>",
											"description": "The end date of the considered period"
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Size of the requested page"
										},
										{
											"key": "materialNumber",
											"value": "<string>",
											"description": "Material number to be produced at the workplace"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset used for pagination"
										},
										{
											"key": "shiftId",
											"value": "<string>",
											"description": "UUID of a shift of the corresponding workplace"
										},
										{
											"key": "startDate",
											"value": "<dateTime>",
											"description": "The start date of the considered period\nDefault: Beginning of the current week"
										}
									],
									"variable": [
										{
											"key": "workplaceId",
											"value": "<string>",
											"description": "(Required) UUID of a workplace"
										}
									]
								},
								"description": "A list of output quantities is returned for each material produced. All output quantities are summarized according to yield, scrap and rework quantity and the production time used for this is returned. In contrast to the specification, which provides the target durations and quantities, the actual durations and quantities are found here. In addition, the performance, the time-based and the quantity-based quality rate are derived from this. A definition of the key figures can be found at https://docs.forcebridge.io/appendix/ ."
							},
							"response": []
						}
					]
				},
				{
					"name": "Retrieve the collection of workplaces.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workplaces?limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workplaces"
							],
							"query": [
								{
									"key": "erpContextId",
									"value": null,
									"description": "Universally unique identifier of the ERP context in which the workplace number is a unique identifier for a workplace or a workplace group. In SAP ERP, for example, this context is defined by the client, the company code, and the plant",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Size of the requested page"
								},
								{
									"key": "offset",
									"value": null,
									"description": "Offset used for pagination",
									"disabled": true
								},
								{
									"key": "workplaceGroupId",
									"value": null,
									"description": "UID of a workplace group",
									"disabled": true
								},
								{
									"key": "workplaceGroupNumber",
									"value": null,
									"description": "Number of a workplace group.",
									"disabled": true
								},
								{
									"key": "workplaceNumber",
									"value": null,
									"description": "The number of the workplace.",
									"disabled": true
								},
								{
									"key": "workplaceType",
									"value": null,
									"description": "The type of workplace.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Retrieve the entry point of FORCE Bridge API.",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						""
					]
				},
				"description": "Retrieve the top level resources of FORCE Bridge API."
			},
			"response": []
		},
		{
			"name": "Notify Applications about a certain event.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"eventType\": \"<string>\",\n    \"data\": \"<object>\",\n    \"eventName\": \"<string>\",\n    \"objectId\": \"<string>\",\n    \"objectType\": \"<string>\",\n    \"timestamp\": \"<dateTime>\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events"
					]
				},
				"description": "This POST method allows for informing about a specific event. Any application registered for the corresponding callback will be notified of the event."
			},
			"response": []
		},
		{
			"name": "Authentication",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "",
							"type": "string"
						},
						{
							"key": "username",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "scope",
							"value": "read write",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{authUrl}}",
					"host": [
						"{{authUrl}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "{{serverUrl}}/api/v3"
		},
		{
			"key": "authUrl",
			"value": "{{serverUrl}}/oauth/token"
		},
		{
			"key": "serverUrl",
			"value": ""
		}
	]
}